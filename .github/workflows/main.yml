# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
       path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Cache Electron
        uses: actions/cache@v1
        with:
          path: ${{ github.workspace }}/.cache/electron
          key: ${{ runner.os }}-electron-cache-${{ hashFiles(format('{0}{1}', github.workspace, '/package-lock.json')) }}
          restore-keys: |
            ${{ runner.os }}-electron-cache-

      - name: Cache Electron-Builder
        uses: actions/cache@v1
        with:
          path: ${{ github.workspace }}/.cache/electron-builder
          key: ${{ runner.os }}-electron-builder-cache-${{ hashFiles(format('{0}{1}', github.workspace, '/package-lock.json')) }}
          restore-keys: |
            ${{ runner.os }}-electron-builder-cache-
      - uses: actions/checkout@v2
      - name: Install deps
        run: |
          sudo dpkg --add-architecture i386 
          sudo apt-get update
          sudo apt-get install --no-install-recommends -y wine32 wine64 gcc-multilib g++-multilib
      - uses: actions/checkout@v2
      - name: Setup Node.js environment
        node-version: ${{ matrix.node-version }}
        uses: actions/setup-node@v1.4.3
        with:
          node-version: 14.x
      - name: Install dependencies
       cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test

        run: |
          npm ci
      - name: Build Linux app (32 bit)
        run: npm run build:linux32
      - name: Build Linux app (64 bit)
        run: npm run build:linux64
      - name: Build Windows App (32 bit)
        run: npm run build:win32
      - name: Build Windows App (64 bit)
        run: npm run build:win64
      - name: Upload - push to artifact files
        uses: actions/upload-artifact@v1
        with:
          name: AhMyth
          path: ./AhMyth-Server/dist/

       
